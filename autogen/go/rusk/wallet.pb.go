// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet.proto

package rusk

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetBalanceRequest struct {
	Vk                   *ViewKey `protobuf:"bytes,1,opt,name=vk,proto3" json:"vk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBalanceRequest) Reset()         { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()    {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{0}
}

func (m *GetBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBalanceRequest.Unmarshal(m, b)
}
func (m *GetBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBalanceRequest.Merge(m, src)
}
func (m *GetBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetBalanceRequest.Size(m)
}
func (m *GetBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBalanceRequest proto.InternalMessageInfo

func (m *GetBalanceRequest) GetVk() *ViewKey {
	if m != nil {
		return m.Vk
	}
	return nil
}

type GetWalletBalanceResponse struct {
	UnlockedBalance      uint64   `protobuf:"fixed64,1,opt,name=unlocked_balance,json=unlockedBalance,proto3" json:"unlocked_balance,omitempty"`
	LockedBalance        uint64   `protobuf:"fixed64,2,opt,name=locked_balance,json=lockedBalance,proto3" json:"locked_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWalletBalanceResponse) Reset()         { *m = GetWalletBalanceResponse{} }
func (m *GetWalletBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetWalletBalanceResponse) ProtoMessage()    {}
func (*GetWalletBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b88fd140af4deb6f, []int{1}
}

func (m *GetWalletBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWalletBalanceResponse.Unmarshal(m, b)
}
func (m *GetWalletBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWalletBalanceResponse.Marshal(b, m, deterministic)
}
func (m *GetWalletBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWalletBalanceResponse.Merge(m, src)
}
func (m *GetWalletBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetWalletBalanceResponse.Size(m)
}
func (m *GetWalletBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWalletBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWalletBalanceResponse proto.InternalMessageInfo

func (m *GetWalletBalanceResponse) GetUnlockedBalance() uint64 {
	if m != nil {
		return m.UnlockedBalance
	}
	return 0
}

func (m *GetWalletBalanceResponse) GetLockedBalance() uint64 {
	if m != nil {
		return m.LockedBalance
	}
	return 0
}

func init() {
	proto.RegisterType((*GetBalanceRequest)(nil), "rusk.GetBalanceRequest")
	proto.RegisterType((*GetWalletBalanceResponse)(nil), "rusk.GetWalletBalanceResponse")
}

func init() { proto.RegisterFile("wallet.proto", fileDescriptor_b88fd140af4deb6f) }

var fileDescriptor_b88fd140af4deb6f = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4f, 0xcc, 0xc9,
	0x49, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x2a, 0x2d, 0xce, 0x96, 0xe2,
	0xca, 0x4e, 0xad, 0x2c, 0x86, 0x88, 0x28, 0x19, 0x71, 0x09, 0xba, 0xa7, 0x96, 0x38, 0x25, 0xe6,
	0x24, 0xe6, 0x25, 0xa7, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xc9, 0x72, 0x31, 0x95,
	0x65, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0xf1, 0xea, 0x81, 0xf4, 0xe8, 0x85, 0x65, 0xa6,
	0x96, 0x7b, 0xa7, 0x56, 0x06, 0x31, 0x95, 0x65, 0x2b, 0xe5, 0x70, 0x49, 0xb8, 0xa7, 0x96, 0x84,
	0x83, 0x0d, 0x86, 0xeb, 0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0xd2, 0xe4, 0x12, 0x28, 0xcd,
	0xcb, 0xc9, 0x4f, 0xce, 0x4e, 0x4d, 0x89, 0x4f, 0x82, 0xc8, 0x81, 0x0d, 0x62, 0x0b, 0xe2, 0x87,
	0x89, 0x43, 0xb5, 0x08, 0xa9, 0x72, 0xf1, 0xa1, 0x29, 0x64, 0x02, 0x2b, 0xe4, 0x45, 0x51, 0x66,
	0x14, 0xc8, 0xc5, 0x06, 0xb1, 0x4a, 0xc8, 0x9d, 0x8b, 0x0b, 0xe1, 0x56, 0x21, 0x71, 0x88, 0xc3,
	0x30, 0x5c, 0x2f, 0x25, 0x07, 0x97, 0xc0, 0xea, 0x44, 0x25, 0x06, 0x27, 0xad, 0x28, 0x8d, 0xf4,
	0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0x94, 0xd2, 0xe2, 0x6c, 0xdd, 0xbc,
	0xd4, 0x92, 0xf2, 0xfc, 0xa2, 0x6c, 0x7d, 0x90, 0x56, 0xdd, 0xe2, 0xe4, 0x8c, 0xd4, 0xdc, 0x44,
	0x6b, 0x10, 0x3b, 0x89, 0x0d, 0x1c, 0x4e, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xd9,
	0xc8, 0x00, 0x49, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WalletClient is the client API for Wallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletClient interface {
	// Get Wallet balance
	GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetWalletBalanceResponse, error)
}

type walletClient struct {
	cc *grpc.ClientConn
}

func NewWalletClient(cc *grpc.ClientConn) WalletClient {
	return &walletClient{cc}
}

func (c *walletClient) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetWalletBalanceResponse, error) {
	out := new(GetWalletBalanceResponse)
	err := c.cc.Invoke(ctx, "/rusk.Wallet/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServer is the server API for Wallet service.
type WalletServer interface {
	// Get Wallet balance
	GetBalance(context.Context, *GetBalanceRequest) (*GetWalletBalanceResponse, error)
}

// UnimplementedWalletServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServer struct {
}

func (*UnimplementedWalletServer) GetBalance(ctx context.Context, req *GetBalanceRequest) (*GetWalletBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}

func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
	s.RegisterService(&_Wallet_serviceDesc, srv)
}

func _Wallet_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Wallet/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rusk.Wallet",
	HandlerType: (*WalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Wallet_GetBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wallet.proto",
}
