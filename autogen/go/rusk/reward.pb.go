// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: reward.proto

package rusk

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BN256Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BN256Point) Reset() {
	*x = BN256Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BN256Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BN256Point) ProtoMessage() {}

func (x *BN256Point) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BN256Point.ProtoReflect.Descriptor instead.
func (*BN256Point) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{0}
}

func (x *BN256Point) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance uint64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceResponse) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type GetWithdrawalTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"fixed64,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetWithdrawalTimeResponse) Reset() {
	*x = GetWithdrawalTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWithdrawalTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWithdrawalTimeResponse) ProtoMessage() {}

func (x *GetWithdrawalTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWithdrawalTimeResponse.ProtoReflect.Descriptor instead.
func (*GetWithdrawalTimeResponse) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{2}
}

func (x *GetWithdrawalTimeResponse) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_reward_proto protoreflect.FileDescriptor

var file_reward_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x72, 0x75, 0x73, 0x6b, 0x22, 0x20, 0x0a, 0x0a, 0x42, 0x4e, 0x32, 0x35, 0x36, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0x8e, 0x01, 0x0a, 0x06,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x2e, 0x72, 0x75, 0x73, 0x6b, 0x2e, 0x42, 0x4e, 0x32, 0x35,
	0x36, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x75, 0x73, 0x6b, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x2e, 0x72, 0x75, 0x73, 0x6b, 0x2e, 0x42,
	0x4e, 0x32, 0x35, 0x36, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x75, 0x73, 0x6b,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reward_proto_rawDescOnce sync.Once
	file_reward_proto_rawDescData = file_reward_proto_rawDesc
)

func file_reward_proto_rawDescGZIP() []byte {
	file_reward_proto_rawDescOnce.Do(func() {
		file_reward_proto_rawDescData = protoimpl.X.CompressGZIP(file_reward_proto_rawDescData)
	})
	return file_reward_proto_rawDescData
}

var file_reward_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_reward_proto_goTypes = []interface{}{
	(*BN256Point)(nil),                // 0: rusk.BN256Point
	(*GetBalanceResponse)(nil),        // 1: rusk.GetBalanceResponse
	(*GetWithdrawalTimeResponse)(nil), // 2: rusk.GetWithdrawalTimeResponse
}
var file_reward_proto_depIdxs = []int32{
	0, // 0: rusk.Reward.GetBalance:input_type -> rusk.BN256Point
	0, // 1: rusk.Reward.GetWithdrawalTime:input_type -> rusk.BN256Point
	1, // 2: rusk.Reward.GetBalance:output_type -> rusk.GetBalanceResponse
	2, // 3: rusk.Reward.GetWithdrawalTime:output_type -> rusk.GetWithdrawalTimeResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_reward_proto_init() }
func file_reward_proto_init() {
	if File_reward_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reward_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BN256Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWithdrawalTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reward_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reward_proto_goTypes,
		DependencyIndexes: file_reward_proto_depIdxs,
		MessageInfos:      file_reward_proto_msgTypes,
	}.Build()
	File_reward_proto = out.File
	file_reward_proto_rawDesc = nil
	file_reward_proto_goTypes = nil
	file_reward_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RewardClient is the client API for Reward service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RewardClient interface {
	// Get reward balance of the given provisioner.
	GetBalance(ctx context.Context, in *BN256Point, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	// Get height of the last reward withdrawal of a given provisioner.
	GetWithdrawalTime(ctx context.Context, in *BN256Point, opts ...grpc.CallOption) (*GetWithdrawalTimeResponse, error)
}

type rewardClient struct {
	cc grpc.ClientConnInterface
}

func NewRewardClient(cc grpc.ClientConnInterface) RewardClient {
	return &rewardClient{cc}
}

func (c *rewardClient) GetBalance(ctx context.Context, in *BN256Point, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/rusk.Reward/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rewardClient) GetWithdrawalTime(ctx context.Context, in *BN256Point, opts ...grpc.CallOption) (*GetWithdrawalTimeResponse, error) {
	out := new(GetWithdrawalTimeResponse)
	err := c.cc.Invoke(ctx, "/rusk.Reward/GetWithdrawalTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RewardServer is the server API for Reward service.
type RewardServer interface {
	// Get reward balance of the given provisioner.
	GetBalance(context.Context, *BN256Point) (*GetBalanceResponse, error)
	// Get height of the last reward withdrawal of a given provisioner.
	GetWithdrawalTime(context.Context, *BN256Point) (*GetWithdrawalTimeResponse, error)
}

// UnimplementedRewardServer can be embedded to have forward compatible implementations.
type UnimplementedRewardServer struct {
}

func (*UnimplementedRewardServer) GetBalance(context.Context, *BN256Point) (*GetBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedRewardServer) GetWithdrawalTime(context.Context, *BN256Point) (*GetWithdrawalTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWithdrawalTime not implemented")
}

func RegisterRewardServer(s *grpc.Server, srv RewardServer) {
	s.RegisterService(&_Reward_serviceDesc, srv)
}

func _Reward_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BN256Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RewardServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Reward/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RewardServer).GetBalance(ctx, req.(*BN256Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reward_GetWithdrawalTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BN256Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RewardServer).GetWithdrawalTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rusk.Reward/GetWithdrawalTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RewardServer).GetWithdrawalTime(ctx, req.(*BN256Point))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reward_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rusk.Reward",
	HandlerType: (*RewardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Reward_GetBalance_Handler,
		},
		{
			MethodName: "GetWithdrawalTime",
			Handler:    _Reward_GetWithdrawalTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reward.proto",
}
